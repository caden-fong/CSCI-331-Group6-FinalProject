[{"/Users/jamesmarsh/repos/CharacterBuilder/src/index.js":"1","/Users/jamesmarsh/repos/CharacterBuilder/src/reportWebVitals.js":"2","/Users/jamesmarsh/repos/CharacterBuilder/src/App.js":"3","/Users/jamesmarsh/repos/CharacterBuilder/src/components/navbar.component.js":"4","/Users/jamesmarsh/repos/CharacterBuilder/src/components/exercises-list.component.js":"5","/Users/jamesmarsh/repos/CharacterBuilder/src/components/edit-exercise.component.js":"6","/Users/jamesmarsh/repos/CharacterBuilder/src/components/create-exercise.component.js":"7","/Users/jamesmarsh/repos/CharacterBuilder/src/components/create-user.component.js":"8"},{"size":500,"mtime":1637723993856,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1637723993857,"results":"11","hashOfConfig":"10"},{"size":900,"mtime":1637744489252,"results":"12","hashOfConfig":"10"},{"size":813,"mtime":1637738650968,"results":"13","hashOfConfig":"10"},{"size":1962,"mtime":1637740563298,"results":"14","hashOfConfig":"10"},{"size":3949,"mtime":1637744430220,"results":"15","hashOfConfig":"10"},{"size":3668,"mtime":1637739900079,"results":"16","hashOfConfig":"10"},{"size":1354,"mtime":1637739400095,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1f29z0r",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jamesmarsh/repos/CharacterBuilder/src/index.js",[],["36","37"],"/Users/jamesmarsh/repos/CharacterBuilder/src/reportWebVitals.js",[],"/Users/jamesmarsh/repos/CharacterBuilder/src/App.js",["38"],"/Users/jamesmarsh/repos/CharacterBuilder/src/components/navbar.component.js",[],"/Users/jamesmarsh/repos/CharacterBuilder/src/components/exercises-list.component.js",[],"/Users/jamesmarsh/repos/CharacterBuilder/src/components/edit-exercise.component.js",["39"],"import React, { Component } from 'react';\nimport DatePicker from 'react-datepicker';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from 'axios';\nimport { useParams } from 'react-router';\n\nclass EditExercise extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.onChangeDuration = this.onChangeDuration.bind(this);\n    this.onChangeDate = this.onChangeDate.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n\n    this.state = {\n      username: '',\n      description: '',\n      duration: 0,\n      date: new Date(),\n      users: []\n    }\n  }\n\n  componentDidMount() {\n    const { id } = this.props.params;\n    axios.get('http://localhost:5000/exercises/'+id)\n      .then(response => {\n        this.setState({\n          username: response.data.username,\n          description: response.data.description,\n          duration: response.data.duration,\n          date: new Date(response.data.date)\n        })   \n      })\n      .catch(function (error) {\n        console.log(error);\n      })\n\n    axios.get('http://localhost:5000/users/')\n      .then(response => {\n        this.setState({ users: response.data.map(user => user.username) });\n      })\n      .catch((error) => {\n        console.log(error);\n      })\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangeDescription(e) {\n    this.setState({\n      description: e.target.value\n    });\n  }\n\n  onChangeDuration(e) {\n    this.setState({\n      duration: e.target.value\n    });\n  }\n\n  onChangeDate(date) {\n    this.setState({\n      date: date\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    const exercise = {\n      username: this.state.username,\n      description: this.state.description,\n      duration: this.state.duration,\n      date: this.state.date,\n    };\n\n    console.log(exercise);\n\n    axios.post('http://localhost:5000/exercises/update/'+this.props.params.id, exercise)\n      .then(res => console.log(res.data));\n    \n    window.location = '/';\n  }\n\n  render() {\n    return (\n      <div>\n        <h3>Edit Exercise Log</h3>\n        <form onSubmit={this.onSubmit}>\n          <div className=\"form-group\"> \n            <label>Username: </label>\n            <select ref=\"userInput\"\n                className=\"form-control\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}>\n                {\n                  this.state.users.map(function(user) {\n                    return <option \n                      key={user}\n                      value={user}>{user}\n                      </option>;\n                  })\n                }\n            </select>\n          </div>\n          <div className=\"form-group\"> \n            <label>Description: </label>\n            <input  type=\"text\"\n                required\n                className=\"form-control\"\n                value={this.state.description}\n                onChange={this.onChangeDescription}\n                />\n          </div>\n          <div className=\"form-group\">\n            <label>Duration (in minutes): </label>\n            <input \n                type=\"text\" \n                className=\"form-control\"\n                value={this.state.duration}\n                onChange={this.onChangeDuration}\n                />\n          </div>\n          <div className=\"form-group\">\n            <label>Date: </label>\n            <DatePicker\n              selected={this.state.date}\n              onChange={this.onChangeDate}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input type=\"submit\" value=\"Edit Exercise Log\" className=\"btn btn-primary\" />\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default (props) => {\n    const params = useParams();\n    return (<EditExercise {...props} params={params} />\n        );\n}","/Users/jamesmarsh/repos/CharacterBuilder/src/components/create-exercise.component.js",[],"/Users/jamesmarsh/repos/CharacterBuilder/src/components/create-user.component.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":2,"column":50,"nodeType":"46","messageId":"47","endLine":2,"endColumn":59},{"ruleId":"48","severity":1,"message":"49","line":148,"column":1,"nodeType":"50","endLine":152,"endColumn":2},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]